import os
import json
import pandas as pd
from sqlalchemy import create_engine
from google.oauth2 import service_account
import gspread
from io import StringIO
import time

def load_gdrive_files(folder_id, creds_json):
    """–ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ Google Drive —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if not folder_id or not creds_json:
            raise ValueError("–ù–µ —É–∫–∞–∑–∞–Ω folder_id –∏–ª–∏ creds_json")
            
        print(f"üîç –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Drive...")
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        try:
            creds_dict = json.loads(creds_json)
            creds = service_account.Credentials.from_service_account_info(
                creds_dict,
                scopes=['https://www.googleapis.com/auth/drive']
            )
            client = gspread.authorize(creds)
        except Exception as auth_error:
            raise Exception(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {str(auth_error)}")

        print(f"üîç –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ ID: {folder_id}")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
            files = client.list_spreadsheet_files(folder_id=folder_id)
            if not files:
                print(f"‚ÑπÔ∏è –ü–∞–ø–∫–∞ {folder_id} –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return None

            dfs = []
            for file in files:
                try:
                    if file['mimeType'] == 'text/csv':
                        print(f"üì• –ù–∞–π–¥–µ–Ω CSV —Ñ–∞–π–ª: {file['name']} (ID: {file['id']})")
                        content = client.export(file['id'], 'text/csv').decode('windows-1251')
                        dfs.append(pd.read_csv(StringIO(content), sep=';', encoding='windows-1251'))
                except Exception as file_error:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ {file.get('name')}: {str(file_error)}")
                    continue
            
            return pd.concat(dfs) if dfs else None

        except Exception as drive_error:
            raise Exception(f"–û—à–∏–±–∫–∞ Google Drive API: {str(drive_error)}")

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ load_gdrive_files: {str(e)}")
        return None

# ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

if __name__ == "__main__":
    start_time = time.time()
    
    try:
        print("üîÑ –ù–∞—á–∞–ª–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        folder_id = os.getenv('GDRIVE_FOLDER_ID')
        creds_json = os.getenv('GDRIVE_CREDS')
        
        print(f"‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
        print(f"Folder ID: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if folder_id else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"Credentials: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã' if creds_json else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã'}")
        
        # 1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        df = load_gdrive_files(folder_id, creds_json)
        
        if df is None:
            raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ Google Drive")
        
        print(f"üìä –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ {len(df)} —Å—Ç—Ä–æ–∫")
        
        # 2. –ó–∞–≥—Ä—É–∑–∫–∞ –≤ MySQL
        db_config = {
            'user': os.getenv('DB_USER'),
            'password': os.getenv('DB_PASSWORD'),
            'host': os.getenv('DB_HOST'),
            'database': os.getenv('DB_NAME'),
            'table': "ComissionOtto"
        }
        
        if upload_to_mysql(df, db_config):
            print("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ MySQL")
        
    except Exception as e:
        print(f"üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
    finally:
        print(f"‚è± –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {time.time() - start_time:.2f} —Å–µ–∫—É–Ω–¥")
